/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package controller;

import dao.CartDAO;
import dao.ChiTietDonHangDAO;
import dao.DBContext;
import dao.DonHangDAO;
import dao.ProductDAO;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.io.PrintWriter;
import java.security.Timestamp;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.Instant;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Cart;
import model.ChiTietDonHang;
import model.DonHang;

/**
 *
 * @author ADMIN
 */
//@WebServlet(name = "CheckoutServlet", urlPatterns = {"/checkout"})
//public class CheckoutServlet extends HttpServlet {
//
//    /**
//     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
//     * methods.
//     *
//     * @param request servlet request
//     * @param response servlet response
//     * @throws ServletException if a servlet-specific error occurs
//     * @throws IOException if an I/O error occurs
//     */
//    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
//            throws ServletException, IOException {
//        response.setContentType("text/html;charset=UTF-8");
//        try (PrintWriter out = response.getWriter()) {
//            /* TODO output your page here. You may use following sample code. */
//            out.println("<!DOCTYPE html>");
//            out.println("<html>");
//            out.println("<head>");
//            out.println("<title>Servlet CheckoutServlet</title>");            
//            out.println("</head>");
//            out.println("<body>");
//            out.println("<h1>Servlet CheckoutServlet at " + request.getContextPath() + "</h1>");
//            out.println("</body>");
//            out.println("</html>");
//        }
//    }
//
//    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
//    /**
//     * Handles the HTTP <code>GET</code> method.
//     *
//     * @param request servlet request
//     * @param response servlet response
//     * @throws ServletException if a servlet-specific error occurs
//     * @throws IOException if an I/O error occurs
//     */
//    @Override
//    protected void doGet(HttpServletRequest request, HttpServletResponse response)
//            throws ServletException, IOException {
//        processRequest(request, response);
//    }
//
//    /**
//     * Handles the HTTP <code>POST</code> method.
//     *
//     * @param request servlet request
//     * @param response servlet response
//     * @throws ServletException if a servlet-specific error occurs
//     * @throws IOException if an I/O error occurs
//     */
//    @Override
//    
//            protected void doPost(HttpServletRequest request, HttpServletResponse response)
//                throws ServletException, IOException {
//                response.setContentType("text/html;charset=UTF-8");
//    PrintWriter out = response.getWriter();
//
//    out.println("<h3><b>Debug:</b> ƒê√£ v√†o doPost c·ªßa CheckoutServlet</h3>");
//
//    // Ki·ªÉm tra session
//    HttpSession session = request.getSession(false);
//    if (session == null || session.getAttribute("userId") == null) {
//        out.println("<h3><b>Debug:</b> Kh√¥ng t√¨m th·∫•y session ho·∫∑c userId</h3>");
//        return;
//    }
//
//    int userId = (int) session.getAttribute("userId");
//    out.println("<h3><b>Debug:</b> userId = " + userId + "</h3>");
//
//    // L·∫•y gi·ªè h√†ng t·ª´ session
//    List<Cart> cartList = (List<Cart>) session.getAttribute("cart");
//    if (cartList == null || cartList.isEmpty()) {
//        out.println("<h3><b>Debug:</b> Session kh√¥ng ch·ª©a gi·ªè h√†ng, th·ª≠ l·∫•y t·ª´ database...</h3>");
//
//        try (Connection conn = DBContext.getConnection()) {
//            CartDAO cartDao = new CartDAO(conn);
//            cartList = cartDao.getCartByUser(userId);
//        } catch (SQLException e) {
//            out.println("<h3><b>Debug:</b> L·ªói khi l·∫•y gi·ªè h√†ng t·ª´ database - " + e.getMessage() + "</h3>");
//            return;
//        }
//
//        if (cartList == null || cartList.isEmpty()) {
//            out.println("<h3><b>Debug:</b> Gi·ªè h√†ng v·∫´n tr·ªëng sau khi l·∫•y t·ª´ database!</h3>");
//            return;
//        }
//    }
//
//    out.println("<h3><b>Debug:</b> Gi·ªè h√†ng c√≥ " + cartList.size() + " s·∫£n ph·∫©m</h3>");
//
//    // L·∫•y th√¥ng tin ƒë·ªãa ch·ªâ t·ª´ form
//    String diaChi = request.getParameter("diaChi");
//    if (diaChi == null || diaChi.trim().isEmpty()) {
//        out.println("<h3><b>Debug:</b> ƒê·ªãa ch·ªâ giao h√†ng kh√¥ng h·ª£p l·ªá!</h3>");
//        return;
//    }
//    out.println("<h3><b>Debug:</b> ƒê·ªãa ch·ªâ giao h√†ng: " + diaChi + "</h3>");
//
//    // T√≠nh t·ªïng ti·ªÅn
//    double tongTien = cartList.stream().mapToDouble(c -> c.getPrice() * c.getQuantity()).sum();
//    out.println("<h3><b>Debug:</b> T·ªïng ti·ªÅn: " + tongTien + " VND</h3>");
//
//    // Th·ª±c hi·ªán ƒë·∫∑t h√†ng
//    try (Connection conn = DBContext.getConnection()) {
//        DonHangDAO donHangDAO = new DonHangDAO(conn);
//        ChiTietDonHangDAO chiTietDonHangDAO = new ChiTietDonHangDAO(conn);
//
//        // 1. T·∫°o ƒë∆°n h√†ng m·ªõi
//        DonHang donHang = new DonHang(0, userId, LocalDate.now(), tongTien, diaChi);
//        int donHangId = donHangDAO.insertDonHang(donHang);
//
//        if (donHangId == -1) {
//            out.println("<h3><b>Debug:</b> L·ªói: Kh√¥ng th·ªÉ t·∫°o ƒë∆°n h√†ng!</h3>");
//            return;
//        }
//
//        out.println("<h3><b>Debug:</b> ƒê∆°n h√†ng ƒë√£ t·∫°o th√†nh c√¥ng! ID: " + donHangId + "</h3>");
//
//        // 2. Th√™m chi ti·∫øt ƒë∆°n h√†ng
//        List<ChiTietDonHang> chiTietList = new ArrayList<>();
//        for (Cart item : cartList) {
//            chiTietList.add(new ChiTietDonHang(0, donHangId, item.getProductId(), item.getQuantity(), item.getPrice()));
//        }
//        chiTietDonHangDAO.insertChiTietDonHang(chiTietList);
//        out.println("<h3><b>Debug:</b> Chi ti·∫øt ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c l∆∞u!</h3>");
//
//        // 3. X√≥a gi·ªè h√†ng sau khi ƒë·∫∑t h√†ng
//        CartDAO cartDAO = new CartDAO(conn);
//        cartDAO.clearCart(userId);
//        session.removeAttribute("cart");
//
//        out.println("<h3><b>Debug:</b> Gi·ªè h√†ng ƒë√£ b·ªã x√≥a!</h3>");
//
//        // Chuy·ªÉn h∆∞·ªõng sang trang c·∫£m ∆°n
//        request.setAttribute("message", "ƒê·∫∑t h√†ng th√†nh c√¥ng!");
//        request.setAttribute("orderId", donHangId); // G√°n m√£ ƒë∆°n h√†ng v√†o request
//        request.setAttribute("diaChi", diaChi); // G√°n ƒë·ªãa ch·ªâ giao h√†ng v√†o request
//        request.setAttribute("total", tongTien); // G√°n t·ªïng ti·ªÅn v√†o request
//
//
//        request.getRequestDispatcher("thankyou.jsp").forward(request, response);
//    } catch (SQLException e) {
//        out.println("<h3><b>Debug:</b> L·ªói khi x·ª≠ l√Ω ƒë∆°n h√†ng: " + e.getMessage() + "</h3>");
//    }
//    
//        }
//    
//
//    /**
//     * Returns a short description of the servlet.
//     *
//     * @return a String containing servlet description
//     */
//    @Override
//    public String getServletInfo() {
//        return "Short description";
//    }// </editor-fold>
//
//}
@WebServlet(name = "CheckoutServlet", urlPatterns = {"/checkout"})
public class CheckoutServlet extends HttpServlet {
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
        
        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();

        // üìù Kh·ªüi t·∫°o danh s√°ch log ƒë·ªÉ debug tr√™n giao di·ªán
        List<String> debugLog = new ArrayList<>();
        debugLog.add("Debug: üõí ƒê√£ v√†o doPost c·ªßa CheckoutServlet");

        // üõë Ki·ªÉm tra session
        HttpSession session = request.getSession(false);
        if (session == null || session.getAttribute("userId") == null) {
            debugLog.add("Debug: ‚ùå Kh√¥ng t√¨m th·∫•y session ho·∫∑c userId");
            response.sendRedirect("login.jsp");
            return;
        }

        int userId = (int) session.getAttribute("userId");
        debugLog.add("Debug: üë§ userId = " + userId);

        // ‚úÖ L·∫•y gi·ªè h√†ng
        List<Cart> cartList = (List<Cart>) session.getAttribute("cart");
        if (cartList == null || cartList.isEmpty()) {
            debugLog.add("Debug: üõí Gi·ªè h√†ng tr·ªëng, l·∫•y t·ª´ database...");
            try (Connection conn = DBContext.getConnection()) {
                CartDAO cartDao = new CartDAO(conn);
                cartList = cartDao.getCartByUser(userId);
            } catch (SQLException e) {
                debugLog.add("Debug: ‚ùå L·ªói khi l·∫•y gi·ªè h√†ng t·ª´ database - " + e.getMessage());
                request.setAttribute("debugLog", debugLog);
                request.getRequestDispatcher("debug.jsp").forward(request, response);
                return;
            }

            if (cartList == null || cartList.isEmpty()) {
                debugLog.add("Debug: ‚ùå Gi·ªè h√†ng v·∫´n tr·ªëng sau khi l·∫•y t·ª´ database!");
                response.sendRedirect("cart.jsp");
                return;
            }
        }

        debugLog.add("Debug: üõç Gi·ªè h√†ng c√≥ " + cartList.size() + " s·∫£n ph·∫©m");

        // ‚úÖ L·∫•y ƒë·ªãa ch·ªâ t·ª´ form
        String diaChi = request.getParameter("diaChi");
        if (diaChi == null || diaChi.trim().isEmpty()) {
            debugLog.add("Debug: ‚ùå ƒê·ªãa ch·ªâ giao h√†ng kh√¥ng h·ª£p l·ªá!");
            request.setAttribute("debugLog", debugLog);
            request.getRequestDispatcher("debug.jsp").forward(request, response);
            return;
        }
        debugLog.add("Debug: üè† ƒê·ªãa ch·ªâ giao h√†ng: " + diaChi);

        // ‚úÖ T√≠nh t·ªïng ti·ªÅn
        double tongTien = cartList.stream().mapToDouble(c -> c.getPrice() * c.getQuantity()).sum();
        debugLog.add("Debug: üí∞ T·ªïng ti·ªÅn: " + tongTien + " VND");

        try (Connection conn = DBContext.getConnection()) {
            DonHangDAO donHangDAO = new DonHangDAO(conn);
            ChiTietDonHangDAO chiTietDonHangDAO = new ChiTietDonHangDAO(conn);
            ProductDAO productDAO = new ProductDAO(conn);

            // ‚úÖ Ki·ªÉm tra stock tr∆∞·ªõc khi ƒë·∫∑t h√†ng
            debugLog.add("Debug: üîç Ki·ªÉm tra stock...");
            for (Cart item : cartList) {
                if (!productDAO.isStockAvailable(item.getProductId(), item.getQuantity())) { 
                    debugLog.add("Debug: ‚ùå S·∫£n ph·∫©m " + item.getProductName() + " ƒë√£ h·∫øt h√†ng!");
                    request.setAttribute("debugLog", debugLog);
                    request.getRequestDispatcher("debug.jsp").forward(request, response);
                    return;
                }
            }
            debugLog.add("Debug: ‚úÖ T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu c√≤n h√†ng!");

            // ‚úÖ T·∫°o danh s√°ch productIds v√† quantities ƒë·ªÉ l∆∞u v√†o DB
            List<String> productIds = new ArrayList<>();

            List<Integer> quantities = new ArrayList<>();
            for (Cart item : cartList) {
                productIds.add(item.getProductId());
                quantities.add(item.getQuantity());
            }

            // ‚úÖ T·∫°o ƒë∆°n h√†ng
            int donHangId = donHangDAO.insertDonHang(userId, productIds, quantities, tongTien, diaChi);
            if (donHangId == -1) {
                debugLog.add("Debug: ‚ùå Kh√¥ng th·ªÉ t·∫°o ƒë∆°n h√†ng!");
                request.setAttribute("debugLog", debugLog);
                request.getRequestDispatcher("debug.jsp").forward(request, response);
                return;
            }
            debugLog.add("Debug: ‚úÖ ƒê∆°n h√†ng ƒë√£ t·∫°o th√†nh c√¥ng! ID: " + donHangId);

            // ‚úÖ Gi·∫£m stock s·∫£n ph·∫©m
            
            debugLog.add("Debug: üîª ƒê√£ c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m!");

            // ‚úÖ X√≥a gi·ªè h√†ng sau khi ƒë·∫∑t h√†ng
            CartDAO cartDAO = new CartDAO(conn);
            cartDAO.clearCart(userId);
            session.removeAttribute("cart");
            debugLog.add("Debug: üóë Gi·ªè h√†ng ƒë√£ b·ªã x√≥a!");

            // ‚úÖ Chuy·ªÉn h∆∞·ªõng sang trang c·∫£m ∆°n
            request.setAttribute("message", "ƒê·∫∑t h√†ng th√†nh c√¥ng!");
            request.setAttribute("orderId", donHangId);
            request.setAttribute("diaChi", diaChi);
            request.setAttribute("total", tongTien);
            debugLog.add("Debug: ‚úÖ Chuy·ªÉn h∆∞·ªõng sang thankyou.jsp");

            request.setAttribute("debugLog", debugLog);
            request.getRequestDispatcher("thankyou.jsp").forward(request, response);
        } catch (SQLException e) {
            debugLog.add("Debug: ‚ùå L·ªói SQL - " + e.getMessage());
            request.setAttribute("debugLog", debugLog);
            request.getRequestDispatcher("debug.jsp").forward(request, response);
        }
    }
}
